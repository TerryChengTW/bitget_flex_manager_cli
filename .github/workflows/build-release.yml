name: Build and Release

on:
  push:
    tags: ['v*']

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: bitget-flex-manager-cli-windows.exe
          - os: macos-latest
            artifact_name: bitget-flex-manager-cli-macos.app

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          pyinstaller --onefile --console --add-data "src/bg_key_example.json;." src/bg_flex_manager_cli.py --name bitget-flex-manager-cli
        else
          # macOS build
          pyinstaller --onefile --console --add-data "src/bg_key_example.json:." src/bg_flex_manager_cli.py --name bitget-flex-manager-cli
          
          # Create .app bundle structure
          mkdir -p "bitget-flex-manager-cli.app/Contents/MacOS"
          mkdir -p "bitget-flex-manager-cli.app/Contents/Resources"
          
          # Move the executable to the app bundle
          cp dist/bitget-flex-manager-cli "bitget-flex-manager-cli.app/Contents/MacOS/"
          
          # Create Info.plist
          cat > "bitget-flex-manager-cli.app/Contents/Info.plist" << 'PLIST_EOF'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>CFBundleName</key>
    <string>Bitget Flex Manager CLI</string>
    <key>CFBundleIdentifier</key>
    <string>com.bitget.flex-manager-cli</string>
    <key>CFBundleVersion</key>
    <string>1.0.0</string>
    <key>CFBundleExecutable</key>
    <string>bitget-flex-manager-cli</string>
    <key>LSApplicationCategoryType</key>
    <string>public.app-category.finance</string>
</dict>
</plist>
PLIST_EOF
          
          # Move app bundle to dist directory
          rm -rf dist/bitget-flex-manager-cli.app
          mv bitget-flex-manager-cli.app dist/
        fi

    - name: Create artifact directory
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          mkdir -p artifacts
          cp dist/*.exe artifacts/${{ matrix.artifact_name }}
        else
          mkdir -p artifacts
          cp -r dist/*.app artifacts/${{ matrix.artifact_name }}
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: artifacts/${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          bitget-flex-manager-cli-windows.exe/bitget-flex-manager-cli-windows.exe
          bitget-flex-manager-cli-macos.app/bitget-flex-manager-cli-macos.app
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}