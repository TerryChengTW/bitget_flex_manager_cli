name: Build and Release

on:
  push:
    tags: ['v*']

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: bitget-flex-manager-cli-windows.exe
          - os: macos-latest
            artifact_name: bitget-flex-manager-cli-macos.app

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      shell: bash
      run: |
        cd src
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          # Windows: 標準.exe檔案
          pyinstaller --onefile --console --add-data "bg_key_example.json;." bg_flex_manager_cli.py --name bitget-flex-manager-cli
        else
          # macOS: 先建立可執行檔
          pyinstaller --onefile --console --add-data "bg_key_example.json:." bg_flex_manager_cli.py --name bitget-flex-manager-cli
          
          # 創建.app bundle結構
          mkdir -p "bitget-flex-manager-cli.app/Contents/MacOS"
          mkdir -p "bitget-flex-manager-cli.app/Contents/Resources"
          
          # 移動可執行檔到.app中
          mv dist/bitget-flex-manager-cli "bitget-flex-manager-cli.app/Contents/MacOS/bitget-flex-manager-cli-bin"
          
          # 創建啟動shell script
          echo '#!/bin/bash' > "bitget-flex-manager-cli.app/Contents/MacOS/bitget-flex-manager-cli"
          echo 'cd "$(dirname "$0")"' >> "bitget-flex-manager-cli.app/Contents/MacOS/bitget-flex-manager-cli"
          echo 'open -a Terminal.app ./bitget-flex-manager-cli-bin' >> "bitget-flex-manager-cli.app/Contents/MacOS/bitget-flex-manager-cli"
          chmod +x "bitget-flex-manager-cli.app/Contents/MacOS/bitget-flex-manager-cli"
          
          # 創建Info.plist
          echo '<?xml version="1.0" encoding="UTF-8"?>' > "bitget-flex-manager-cli.app/Contents/Info.plist"
          echo '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">' >> "bitget-flex-manager-cli.app/Contents/Info.plist"
          echo '<plist version="1.0"><dict>' >> "bitget-flex-manager-cli.app/Contents/Info.plist"
          echo '<key>CFBundleExecutable</key><string>bitget-flex-manager-cli</string>' >> "bitget-flex-manager-cli.app/Contents/Info.plist"
          echo '<key>CFBundleIdentifier</key><string>com.bitget.flex-manager-cli</string>' >> "bitget-flex-manager-cli.app/Contents/Info.plist"
          echo '<key>CFBundleName</key><string>Bitget Flex Manager CLI</string>' >> "bitget-flex-manager-cli.app/Contents/Info.plist"
          echo '<key>CFBundleVersion</key><string>1.0.0</string>' >> "bitget-flex-manager-cli.app/Contents/Info.plist"
          echo '</dict></plist>' >> "bitget-flex-manager-cli.app/Contents/Info.plist"
          
          # 移動.app到dist目錄
          mv bitget-flex-manager-cli.app dist/
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: src/dist/bitget-flex-manager-cli${{ matrix.os == 'windows-latest' && '.exe' || '.app' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          bitget-flex-manager-cli-windows.exe/bitget-flex-manager-cli.exe
          bitget-flex-manager-cli-macos.app/bitget-flex-manager-cli.app
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}